"""
    - 함수 호출 (function call; 함수 실행)
        리턴값을_넣을_변수 = 함수명(인자값)
        예)  a = add(b, c, d)
            area = get_circle_area(10)

        ** 리턴값이 없는 함수거나 리턴값을 받을 필요가 없다면 '변수 =' 의 명령을 추가할 필요는 없다.
           리턴값이 없는 함수의 경우 리턴값 대신 None 을 리턴한다. (대표 예. print())

        ** 인자값은 argument 라고 한다.
            인자값은 값, 변수, 식 모두 가능하다.
            이때 각 결과값이 인자로 전달된다.
            a = 10
            func(a)   ==> a 자체가 들어가는 것이 아니라 a의 값인 10이 들어간다

"""

# 리턴값이 없는 함수의 예 (print(), 리스트.append() 등)
print("1111", "2222")
# 인자 : "1111"와 "2222" => 2개
# 리턴 : None

a = print('3333')
# 인자 : '3333' => 1개
# 리턴 : None
print(f'a : {a}')  # a : None

lst = [10, 20, 30, 40]
a = lst.append(50)
# 인자 : 50
# 리턴 : None
print(f'a : {a}, lst : {lst}')  # a : None, lst : [10, 20, 30, 40, 50]

################################################################

# 리턴값이 있는 함수의 예 (list(), len(), input(), 리스트.index() 등)
a = list()
# 인자 : 없음
# 리턴 : 빈 리스트
print(f'a : {a}')  # a : []

a = len([1, 2, 3, 4])
# 인자 : 리스트 1개
# 리턴 : 4
print(f'a : {a}')  # a : 4

a = input('아무거나:')
# 인자 : '아무거나:'
# 리턴 : 입력된 데이터 (str 형)
print(f'a : {a}')  # a : aaaa

lst = [10, 20, 30, 40]
a = lst.index(20)
# 인자 : 20
# 리턴 : 1 (20의 인덱스)
print(f'a : {a}, lst : {lst}')  # a : 1, lst : [10, 20, 30, 40]
